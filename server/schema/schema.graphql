type Query {
  downloads(userId: ID!): [Download!]
}

type Mutation {
  addDownload(download: CreateDownload!): Download!
}

type Subscription {
  subscribeDownloads(userId: ID!): [Download!]
}

input CreateDownload {
  link: String!
  userId: ID!
}

enum DownloadStatus {
  DONE
  INPROGRESS
  NOTSTARTED
  ERROR
}

type Download {
  id: ID!
  userId: ID!
  link: String!
  status: DownloadStatus!
  progress: Float
  createdAt: Time!
  updatedAt: Time
}

scalar Time
